name: CI/CD for Databricks Bundles
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      skip-linting:
        description: 'Skip linting checks'
        required: false
        type: boolean
        default: false
      skip-secret-scan:
        description: 'Skip secret scanning (emergency only)'
        required: false
        type: boolean
        default: false

permissions:
  id-token: write   # Required for OIDC authentication
  contents: read    # Required to checkout code
  security-events: write  # Required for security scanning results

jobs:
  # Secret Detection - Runs first to block pipeline if secrets found
  secret-scan:
    runs-on: ubuntu-latest
    if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.skip-secret-scan == 'true') }}
    permissions:
      security-events: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full git history for comprehensive scan

      - name: Run TruffleHog Secret Detection (SARIF output)
        id: trufflehog
        run: |
          echo "Running TruffleHog scan..."
          trufflehog git file://. \
            --no-update \
            --only-verified \
            --fail \
            --json \
            --output trufflehog-results.json || true

          # Convert JSON to SARIF
          echo "Converting JSON to SARIF..."
          trufflehog convert --input trufflehog-results.json --format sarif --output trufflehog-results.sarif || true

      - name: Upload SARIF to GitHub Security Alerts
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trufflehog-results.sarif
          category: trufflehog

      - name: Upload Raw Report Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-report
          path: trufflehog-results.json

      - name: Secret scan summary
        if: success()
        run: echo "âœ… No secrets detected - pipeline can proceed"

      - name: Secret scan failed
        if: failure()
        run: |
          echo "ðŸš¨ SECRETS DETECTED!"
          echo "Pipeline blocked to prevent credential exposure."
          echo "Please remove secrets and use GitHub Secrets or Azure Key Vault instead."
          exit 1

  # PR Validation - Always includes linting
  validate:
    needs: [secret-scan]
    if: github.event_name == 'pull_request' && (needs.secret-scan.result == 'success' || needs.secret-scan.result == 'skipped')
    uses: Himaan1502/ADB-Template/.github/workflows/reusable-ci-cd.yml@main
    with:
      environment: dev
      skip-linting: false  # Always run linting for PRs
    secrets:
      client-id: ${{ secrets.AZURE_CLIENT_ID }}
      tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  # DEV Deployment - WITH Linting
  deploy-dev:
    needs: [secret-scan]
    if: github.event_name != 'pull_request' && (needs.secret-scan.result == 'success' || needs.secret-scan.result == 'skipped')
    uses: Himaan1502/ADB-Template/.github/workflows/reusable-ci-cd.yml@main
    with:
      environment: dev
      skip-linting: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.skip-linting == 'true' }}
    secrets:
      client-id: ${{ secrets.AZURE_CLIENT_ID }}
      tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  # UAT Deployment - NO Linting (depends on dev success)
  deploy-uat:
    needs: [deploy-dev]
    if: github.event_name != 'pull_request'
    uses: Himaan1502/ADB-Template/.github/workflows/reusable-ci-cd.yml@main
    with:
      environment: uat
      skip-linting: true  # Always skip linting for UAT - code already validated in dev
    secrets:
      client-id: ${{ secrets.AZURE_CLIENT_ID }}
      tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
